apply plugin: 'com.android.library'
//apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
apply plugin: 'com.github.dcendents.android-maven'
group = 'com.github.SadadDeveloper'

buildscript {
    repositories {
        mavenCentral()

    }
    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
    }
}

android {
    compileSdkVersion 29

    testBuildType "profiling"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        resConfigs "en", "ar"

        externalNativeBuild {
            cmake {
                abiFilters 'armeabi-v7a', "arm64-v8a", "x86",  "x86_64"
                arguments '-DANDROID_STL=c++_shared'
            }
        }

        useLibrary 'org.apache.http.legacy'
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            jniDebuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            consumerProguardFiles 'proguard-customer.pro'
        }
        debug {
            jniDebuggable true
            debuggable true
        }
        profiling {
            initWith debug
            externalNativeBuild {
                cmake {
                    arguments "-DCMAKE_BUILD_TYPE=Release"//, '-DCMAKE_VERBOSE_MAKEFILE=1'
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

//    resourcePrefix "wocr_"
    ndkVersion '20.0.5594570'
}

dependencies {
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation "com.facebook.device.yearclass:yearclass:2.1.0"

    testImplementation "junit:junit:4.12"

    /**Sadad code libraries*/
    //material design support
    implementation 'com.google.android.material:material:1.0.0'
    // for multiple screen resolution, refer link : https://github.com/intuit/sdp
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    // Network library
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
}

task javadoc(type: Javadoc) {

    description "Generates Javadoc for ${archivesBaseName}-${version} API"
    group JavaBasePlugin.DOCUMENTATION_GROUP

    title = "${archivesBaseName}-${version} API References"

//    source android.sourceSets.main.java.srcDirs, configurations.doc.collect { zipTree(it) }
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

    options {
        memberLevel = JavadocMemberLevel.PUBLIC
        linksOffline('http://developer.android.com/reference/', "${android.sdkDirectory}/docs/reference");
    }

    include '<path of your public api>/*.java'
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
    exclude '**/test/**/*.java'

    failOnError false
}

task androidJavadocsJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives androidJavadocsJar
}